import streamlit as st
import pandas as pd
import os
from io import BytesIO

# Page configuration
st.set_page_config(
    page_title="Gestione Corsi e Documenti",
    page_icon="üìö",
    layout="centered",
    initial_sidebar_state="collapsed",
)

def load_css(file_name):
    with open(os.path.join('assets', file_name)) as f:
        st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)

# Load existing CSS
load_css('style.css')

# Header with modern design
st.markdown("""
    <div style='text-align: center; padding: 2rem 0;'>
        <h1 style='
            background: linear-gradient(135deg, #6C63FF 0%, #4C46B3 100%);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            font-size: 2.5rem;
            font-weight: 700;
            margin-bottom: 1rem;
        '>
            Gestione Corsi e Documenti
        </h1>
        <p style='color: #666; font-size: 1.1rem;'>
            Sistema di gestione integrato per corsi e documentazione
        </p>
    </div>
""", unsafe_allow_html=True)

# Create two columns for better layout
col1, col2 = st.columns([3, 1])

with col1:
    opzione = st.radio(
        "Scegli l'analisi da eseguire:",
        ["Corsi", "Documenti"],
        horizontal=True,
    )

file_caricato = st.file_uploader(
    f"Carica il file {opzione.lower()} (Formato .xlsx)",
    type="xlsx"
)

# Year input with modern styling
col1, col2, col3 = st.columns([1, 2, 1])
with col2:
    anno_riferimento = st.number_input(
        "Anno di riferimento",
        min_value=2023,
        step=1,
        format="%d",
        value=2025
    )

# Load mapping files
df_ateco, df_mappa_corsi, df_periodo_gruppi, df_aggiornamento, df_mappa_documenti, df_periodicita_documenti = carica_file_mappatura()

# Center the generate button
col1, col2, col3 = st.columns([1, 2, 1])
with col2:
    if st.button("Genera File", use_container_width=True):
        if file_caricato:
            if opzione == "Corsi":
                excel_first_file, excel_grouped_file = processa_corsi(
                    file_caricato, df_ateco, df_mappa_corsi,
                    df_periodo_gruppi, df_aggiornamento, anno_riferimento
                )
                
                st.markdown("""
                    <div class="success-message">
                        ‚úÖ File generati con successo!
                    </div>
                """, unsafe_allow_html=True)
                
                col1, col2 = st.columns(2)
                with col1:
                    st.download_button(
                        "üì• Scarica file completo",
                        data=excel_first_file,
                        file_name=f"Corsi_scadenza_{anno_riferimento}_completo.xlsx",
                        use_container_width=True
                    )
                with col2:
                    st.download_button(
                        "üì• Scarica file per gruppo",
                        data=excel_grouped_file,
                        file_name=f"Programma_{anno_riferimento}_per_gruppo.xlsx",
                        use_container_width=True
                    )
                    
            elif opzione == "Documenti":
                excel_documenti_file = processa_documenti(
                    file_caricato, df_mappa_documenti,
                    df_periodicita_documenti, anno_riferimento
                )
                
                st.markdown("""
                    <div class="success-message">
                        ‚úÖ File generato con successo!
                    </div>
                """, unsafe_allow_html=True)
                
                st.download_button(
                    "üì• Scarica file documenti",
                    data=excel_documenti_file,
                    file_name=f"Documenti_scadenza_{anno_riferimento}.xlsx",
                    use_container_width=True
                )
        else:
            st.markdown("""
                <div class="error-message">
                    ‚ö†Ô∏è Per favore, carica un file prima di procedere.
                </div>
            """, unsafe_allow_html=True)
